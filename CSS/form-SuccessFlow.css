@import url("https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css");
form.form {
  background-color: transparent;
  font-family: Arial, Helvetica, sans-serif !important;
}
form.form input.text,
form.form textarea,
form.form select,
form.form input.date {
  font-family: Arial, Helvetica, sans-serif !important;
  color: #2a295c !important;
  font-size: 14px !important;
  border: none !important;
  padding: 0px 10px !important;
  -webkit-box-shadow: none !important;
  box-shadow: none !important;
  border-radius: 0 !important;
  margin-bottom: 0 !important;
  width: 100% !important;
  font-weight: 300 !important;
  -webkit-appearance: none !important;
  height: 31px !important;
  border: 1px solid #2a295c !important;
  background-color: #ffffff !important;
  margin-top: 5px;
}
form.form select {
  border-radius: 0 !important;
  background-color: #fff;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  background-image: url(https://go.sodexo.com/l/786623/2019-08-14/9ld/786623/4419/1498763837427_select.png) !important;
  background-repeat: no-repeat !important;
  background-position: 98% 45%;
  background-size: 17px 12px;
}
form.form p:not([class]) {
  font-weight: 400;
  width: 100%;
  float: left;
  padding: 0;
  margin: 1em 0;
}
form.form p.form-field {
  float: left;
  padding: 0 5px 10px;
  width: 100%;
  margin: 0;
}
form.form p.form-field label {
  width: 100% !important;
  color: #2a295c !important;
  font-family: Arial, Helvetica, sans-serif !important;
  float: left !important;
  font-size: 14px !important;
}
form.form p.form-field label.inline {
  margin: 5px 5px;
  padding: 0;
  width: 90%;
  float: left;
}
form.form p.form-field textarea {
  height: 120px !important;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  padding: 1em;
}
form.form p.form-field span > span input[type="radio"] {
  float: left;
  margin-right: 10px;
}
form.form p.pd-radio {
  margin-bottom: 1em;
}
form.form p.pd-radio label:first-of-type {
  margin-bottom: 1em;
  width: 100%;
}
form.form p.pd-radio span > span > label,
form.form p.pd-radio span > span > input {
  float: left;
}
form.form p.pd-radio span > span > input {
  width: 20px !important;
  border: 1px solid red;
}
form.form p.pd-radio span > span > label {
  margin: -3px 0 0 0 !important;
  padding: 0;
  width: 70% !important;
  vertical-align: text-top;
}
form.form p.pd-checkbox input[type="checkbox"] {
  border: 1px solid red;
  margin: 10px 0;
  float: left;
}
form.form p.pd-checkbox label {
  margin: -2px 6px 0;
  font-weight: 300;
}
form.form p.submit {
  width: 100%;
  text-align: center;
  margin: 1em auto;
  float: left;
  -webkit-transition: all 0.25s ease-in-out;
  transition: all 0.25s ease-in-out;
  clear: both !important;
}
form.form p.submit:hover input:hover {
  opacity: 0.8;
  cursor: pointer;
}
form.form p.submit input {
  padding: 5px !important;
  color: #fff !important;
  text-shadow: none !important;
  font-size: 14px !important;
  transition: 0.5s;
  -webkit-transition: 0.5s;
  -moz-transition: 0.5s;
  -o-transition: 0.5s;
  height: 35px !important;
  text-transform: uppercase !important;
  text-align: center !important;
  border: none !important;
  position: relative !important;
  margin-top: 0 !important;
  border-radius: 0 !important;
  -webkit-box-shadow: none !important;
  box-shadow: none !important;
  background: none !important;
  font-family: Arial, Helvetica, sans-serif !important;
  background-color: #ff0000 !important;
  width: 205px !important;
  display: inline-block !important;
  margin: 0 auto;
}

p.errors,
p.error {
  color: #dc070b;
}

p.errors {
  margin-bottom: 1em;
  color: #ff0909 !important;
  background-color: transparent !important;
  background-color: transparent;
}
p.errors.no-label {
  display: none;
}

p.form-field.required label,
span.required label {
  background: none !important;
}

p.form-field.required label.field-label:before {
  content: " *";
  color: red;
}

p.error input,
p.error select,
p.error textarea {
  border: 1px solid #ff0808 !important;
}

.require label:after {
  content: " *";
  color: red !important;
}

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
}

::-moz-placeholder {
  /* Firefox 19+ */
}

:-ms-input-placeholder {
  /* IE 10+ */
}

:-moz-placeholder {
  /* Firefox 18- */
}

/* Import FontAwesome for the checkmark icon */
/* hide the regular radio button */
.pd-radio input {
  opacity: 0;
  position: absolute;
}

/* position the label */
.pd-radio input,
.pd-radio label {
  display: inline-block;
  vertical-align: middle;
  margin: 5px;
  cursor: pointer;
}

.pd-radio label {
  position: relative;
}

/* style the unchecked radio button */
.pd-radio input + label:before {
  content: "";
  background: #fff;
  border: 1px solid #2a295c;
  display: inline-block;
  vertical-align: middle;
  width: 15px;
  height: 15px;
  padding: 2px;
  line-height: 15px;
  margin-right: 10px;
  text-align: center;
}

.pd-radio input + label:before {
  border-radius: 50%;
}

/* style the selected radio button */
.pd-radio input:checked + label:before {
  content: "\f00c";
  font-family: "FontAwesome";
  color: #2a295c;
}

.pd-radio input:focus + label {
  outline: 1px solid #ddd;
  /* focus style */
}

/* hide the regular checkbox */
.pd-checkbox input {
  opacity: 0;
  position: absolute;
}

/* position the label */
.pd-checkbox input,
.pd-checkbox label {
  display: inline-block;
  vertical-align: middle;
  margin: 5px;
  cursor: pointer;
}

.pd-checkbox label {
  position: relative;
}

/* style the unchecked checkbox */
.pd-checkbox input + label:before {
  content: "";
  background: #fff;
  border: 1px solid #2a295c;
  display: inline-block;
  vertical-align: middle;
  width: 18px;
  height: 18px;
  padding: 5px;
  margin-right: 10px;
  text-align: center;
  font-size: 15px;
  line-height: 18px;
}

/* style the checked checkbox */
.pd-checkbox input:checked + label:before {
  content: "\f00c";
  font-family: "FontAwesome";
  background: #2a295c;
  color: #fff;
  border-color: #2a295c;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
